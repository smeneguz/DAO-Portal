version: '3.8'

services:
  postgres:
    image: timescale/timescaledb:latest-pg16
    container_name: dao-portal-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-dao_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dao_password}
      POSTGRES_DB: ${POSTGRES_DB:-dao_portal}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-dao_user} -d ${POSTGRES_DB:-dao_portal}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: dao-portal-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: dao-portal-redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dao-portal-backend
    volumes:
      - ./backend:/app
      - ./raw_json:/data
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER:-dao_user}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-dao_password}
      - DB_NAME=${POSTGRES_DB:-dao_portal}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - API_PREFIX=/api/v1
      - SECRET_KEY=${SECRET_KEY:-change_this_in_production}
      - DEBUG=true
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: